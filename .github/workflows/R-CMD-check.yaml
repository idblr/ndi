on:
  push:
    branches:
      - main
  pull_request:
    branches:
     - main

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'devel'}
          - {os: macOS-latest,   r: 'release'}
          - {os: macOS-latest,   r: 'oldrel'}
          - {os: windows-latest, r: 'devel'}
          - {os: windows-latest, r: 'release'}
          - {os: windows-latest, r: 'oldrel'}
          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'oldrel'}
          # - {os: ubuntu-latest,  r: 'oldrel-1'}
          # - {os: ubuntu-latest,  r: 'oldrel-2'}
          # # dependencies 'DescTools' and 'pbkrtest' (a dependency of 'car') depend on R (>= 4.2.0)
          # - {os: ubuntu-latest,  r: 'oldrel-3'}
          # - {os: ubuntu-latest,  r: 'oldrel-4'}
          # - {os: ubuntu-latest,  r: 'oldrel-5'}

    env:
      R_KEEP_PKG_SOURCE: yes      
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
          
      - uses: r-lib/actions/setup-pandoc@v2

      - name: "[Custom block] [macOS] Install spatial libraries"
        if: runner.os == 'macOS'
        run: brew install udunits gdal proj geos
      
      - name: "[Custom block] [Linux] Install spatial libraries"
        if: runner.os == 'Linux'
        run: sudo apt-get install libudunits2-dev libgdal-dev libproj-dev libgeos-dev
      
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE, build = FALSE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}
        
      - name: "[Custom block] [macOS] Install units from source"
        if: runner.os == 'macOS'
        run: |
          install.packages('udunits2', type = 'source', configure.args = '--with-udunits2-include=/usr/include/udunits2')
          install.packages('units', type = 'source', configure.args = '--with-udunits2-include=/usr/include/udunits2')
        shell: Rscript {0}
      
      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
     
      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
